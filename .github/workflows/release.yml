name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Determine version
        id: ver
        run: |
          VERSION="${GITHUB_REF_NAME}"
          # strip leading 'v' if present
          VERSION="${VERSION#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Extract release notes from CHANGELOG.md
        id: notes
        run: |
          ver='${{ steps.ver.outputs.version }}'
          awk -v ver="$ver" '
            BEGIN {print("# UR.RTDE " ver " Release\n")}
            $0 ~ "^## \[" ver "\]" {flag=1; next}
            $0 ~ /^## \[/ && flag==1 {flag=0}
            flag==1 {print}
          ' CHANGELOG.md > RELEASE_NOTES.md
          echo "Generated RELEASE_NOTES.md:" && cat RELEASE_NOTES.md

      - name: Build package
        run: |
          dotnet restore
          dotnet pack src/UR.RTDE -c Release -o nupkgs

      - name: Find nupkg path
        id: nupkg
        run: |
          ver='${{ steps.ver.outputs.version }}'
          file=$(ls nupkgs/UR.RTDE.${ver}.nupkg)
          echo "path=$file" >> $GITHUB_OUTPUT
          echo "Found: $file"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: UR.RTDE v${{ steps.ver.outputs.version }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
          files: |
            ${{ steps.nupkg.outputs.path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

